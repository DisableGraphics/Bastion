#include "kernel/key.hpp"
#include <stdint.h>
#include <kernel/keyboard.hpp>

KEY Keyboard::get_key_normal(uint8_t code) {
	switch(code) {
		case 0x01:
			return F9;
		case 0x03:
			return F5;
		case 0x04:
			return F3;
		case 0x05:
			return F1;
		case 0x06:
			return F2;
		case 0x07:
			return F12;
		case 0x09:
			return F10;
		case 0x0A:
			return F8;
		case 0x0B:
			return F6;
		case 0x0C:
			return F4;
		case 0x0D:
			return TAB;
		case 0x0E:
			return BACK_TICK;
		case 0x11:
			return LEFT_ALT;
		case 0x12:
			return LEFT_SHIFT;
		case 0x14:
			return LEFT_CTRL;
		case 0x15:
			return Q;
		case 0x16:
			return ONE;
		case 0x1A:
			return Z;
		case 0x1B:
			return S;
		case 0x1C:
			return A;
		case 0x1D:
			return W;
		case 0x1E:
			return TWO;
		case 0x21:
			return C;
		case 0x22:
			return X;
		case 0x23:
			return D;
		case 0x24:
			return E;
		case 0x25:
			return FOUR;
		case 0x26:
			return THREE;
		case 0x29:
			return SPACE;
		case 0x2A:
			return V;
		case 0x2B:
			return F;
		case 0x2C:
			return T;
		case 0x2D:
			return R;
		case 0x2E:
			return FIVE;
		case 0x31:
			return N;
		case 0x32:
			return B;
		case 0x33:
			return H;
		case 0x34:
			return G;
		case 0x35:
			return Y;
		case 0x36:
			return SIX;
		case 0x3A:
			return M;
		case 0x3B:
			return J;
		case 0x3C:
			return U;
		case 0x3D:
			return SEVEN;
		case 0x3E:
			return EIGHT;
		case 0x41:
			return COMMA;
		case 0x42:
			return K;
		case 0x43:
			return I;
		case 0x44:
			return O;
		case 0x45:
			return ZERO;
		case 0x46:
			return NINE;
		case 0x49:
			return PERIOD;
		case 0x4A:
			return SLASH;
		case 0x4B:
			return L;
		case 0x4C:
			return SEMICOLON;
		case 0x4D:
			return P;
		case 0x4E:
			return MINUS;
		case 0x52:
			return QUOTE;
		case 0x54:
			return SQ_BRACKET_OPEN;
		case 0x55:
			return EQUALS;
		case 0x58:
			return CAPS_LOCK;
		case 0x59:
			return RIGHT_SHIFT;
		case 0x5A:
			return ENTER;
		case 0x5B:
			return SQ_BRACKET_CLOSE;
		case 0x5D:
			return BACKSLASH;
		case 0x66:
			return BACKSPACE;
		case 0x69:
			return KEYP_ONE;
		case 0x6B:
			return KEYP_FOUR;
		case 0x6C:
			return KEYP_SEVEN;
		case 0x70:
			return KEYP_ZERO;
		case 0x71:
			return KEYP_PERIOD;
		case 0x72:
			return KEYP_TWO;
		case 0x73:
			return KEYP_FIVE;
		case 0x74:
			return KEYP_SIX;
		case 0x75:
			return KEYP_EIGHT;
		case 0x76:
			return ESCAPE;
		case 0x77:
			return NUM_LOCK;
		case 0x78:
			return F11;
		case 0x79:
			return KEYP_PLUS;
		case 0x7A:
			return KEYP_THREE;
		case 0x7B:
			return KEYP_MINUS;
		case 0x7C:
			return KEYP_ASTERISK;
		case 0x7D:
			return KEYP_NINE;
		case 0x7E:
			return SCROLL_LOCK;
		case 0x83:
			return F7;

		default:
			return NONE;
	}
	return NONE;
}

KEY Keyboard::get_key_media(uint8_t code) {
	switch(code) {
		case 0x10:
			return WWW_SEARCH;
		case 0x11:
			return ALT_GR;
		case 0x14:
			return RIGHT_CTRL;
		case 0x15:
			return PREV_TRACK;
		case 0x18:
			return WWW_FAVES;
		case 0x1F:
			return LEFT_GUI;
		case 0x20:
			return WWW_REFRESH;
		case 0x21:
			return VOLUME_DOWN;
		case 0x23:
			return VOLUME_MUTE;
		case 0x27:
			return RIGHT_GUI;
		case 0x28:
			return WWW_STOP;
		case 0x2B:
			return CALCULATOR;
		case 0x2F:
			return APPS;
		case 0x30:
			return WWW_FORWARD;
		case 0x32:
			return VOLUME_UP;
		case 0x34:
			return PLAY_PAUSE;
		case 0x37:
			return ACPI_POWER;
		case 0x38:
			return WWW_BACK;
		case 0x3A:
			return WWW_HOME;
		case 0x3B:
			return STOP;
		case 0x3F:
			return ACPI_SLEEP;
		case 0x40:
			return MY_COMPUTER;
		case 0x48:
			return EMAIL;
		case 0x4A:
			return SLASH;
		case 0x4D:
			return NEXT_TRACK;
		case 0x50:
			return MEDIA_SELECT;
		case 0x5A:
			return ENTER;
		case 0x5E:
			return ACPI_WAKE;
		case 0x69:
			return END;
		case 0x6B:
			return CURSOR_LEFT;
		case 0x6C:
			return HOME;
		case 0x70:
			return INSERT;
		case 0x71:
			return DELETE;
		case 0x72:
			return CURSOR_DOWN;
		case 0x74:
			return CURSOR_RIGHT;
		case 0x75:
			return CURSOR_UP;
		case 0x7A:
			return PAGE_DOWN;
		case 0x7D:
			return PAGE_UP;
	}
	return NONE;
}